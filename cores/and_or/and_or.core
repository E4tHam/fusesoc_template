CAPI=2:
name: ethan:tests:and_or:1.0.0
description: And & or gate

# Source Files https://fusesoc.readthedocs.io/en/stable/user/build_system/core_files.html#targets
filesets:
  # default
  rtl:
    depend:
      - ethan:tests:and
      - ethan:tests:or
  # simulation
  tb:
    files:
      - tb/and_or.tb.v: {file_type: verilogSource}
  # synthesis
  synth:
    files:
      - synth/top.v: {file_type: verilogSource}
  proginfo:
    files:
      - scripts/proginfo.py: {file_type : user, copyto : proginfo.py}
  # boards
  tinyfpga_bx:
    files:
      - boards/tinyfpga_bx/pinout.pcf: {file_type: PCF}


# Targets https://fusesoc.readthedocs.io/en/stable/user/build_system/core_files.html#targets
targets:
  default: &default
    filesets:
      - rtl
  synth: &synth
    filesets:
      - rtl
      - synth
    toplevel: top_m

  # The "sim" target simulates the design
  sim: # fusesoc run --target=sim ethan:tests:and_or:1.0
    <<: *default
    description: Simulate the design
    default_tool: icarus
    filesets_append:
      - tb
    toplevel: and_or_tb
    tools:
      icarus:
        iverilog_options:
          - -g2012 # Use SystemVerilog-2012

  tinyfpga_bx:
    <<: *synth
    description: Synthesize on Tiny FPGA Bx
    filesets_append:
      - proginfo
      - tinyfpga_bx
    default_tool: icestorm
    hooks:
      post_run: [tinyprog]
    tools:
      icestorm:
        nextpnr_options : [--lp8k, --package, cm81]
        pnr: next

scripts:
  tinyprog:
    cmd: [python3, proginfo.py, tinyprog]
